<?xml version="1.0"?>

<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" "../dtd/docbook/4.1.2/docbookx.dtd">

<!-- ********************************************************************
     $Id$
     ******************************************************************** -->

<chapter id="prop-on-exit-n">
    <title>wrapper.on_exit.&lt;n&gt; Property</title>
    <section>
        <title>Configuration Property Overview</title>
        <itemizedlist>
            <listitem>
                <ulink url="properties.html">Configuration Property Overview</ulink>
            </listitem>
            <listitem>
                <ulink url="props-advanced.html">Advanced Properties</ulink>
            </listitem>
            <listitem>
                <ulink url="properties.html#name">Property List by Name</ulink>
            </listitem>
        </itemizedlist>
    </section>
    <section>
        <title>wrapper.on_exit.&lt;n&gt;</title>
        <para>
            Some applications are good about returning exit codes with meaning.
            In such cases it may be desirable to restart the application in the
            event that it exits with certain exit codes.  This set of properties
            makes this possible.
        </para>
        <para>
            If it possible to specify an action to take for any exit code by
            making use of the <literal moreinfo="none">wrapper.on_exit.default</literal>
            property and setting it to either <literal moreinfo="none">SHUTDOWN</literal>
            or <literal moreinfo="none">RESTART</literal>.  The default on_exit
            property defaults to <literal moreinfo="none">SHUTDOWN</literal>.
        </para>
        <informalexample>
            <simpara><emphasis>Example:</emphasis></simpara>
            <screen format="linespecific"><![CDATA[wrapper.on_exit.default=RESTART]]></screen>
        </informalexample>
        <para>
            In addition, it is possible to specify what will happen for a specific
            exit code by defining a property whose name is
            <literal moreinfo="none">wrapper.on_exit.</literal> followed by the
            exit code.  The value is set to either
            <literal moreinfo="none">SHUTDOWN</literal> or
            <literal moreinfo="none">RESTART</literal>.  If an on_exit property
            is not defined for a given exit code then it will default to the
            value of the <literal moreinfo="none">wrapper.on_exit.default</literal>
            property.
        </para>
        <informalexample>
            <simpara><emphasis>Example:</emphasis></simpara>
            <screen format="linespecific"><![CDATA[wrapper.on_exit.1=RESTART]]></screen>
        </informalexample>
        <para>
            To configure the Wrapper to restart the JVM for all exit codes except
            the exit code 0, use the following:
        </para>
        <informalexample>
            <simpara><emphasis>Example:</emphasis></simpara>
            <screen format="linespecific"><![CDATA[wrapper.on_exit.default=RESTART
wrapper.on_exit.0=SHUTDOWN]]></screen>
        </informalexample>
        <para>
            on_exit properties will be triggered by calls to
            <literal moreinfo="none">WrapperManager.stop(n)</literal>,
            <literal moreinfo="none">WrapperManager.stopImmediate(n)</literal>, and
            <literal moreinfo="none">System.exit(n)</literal>.
        </para>
        <para>
            External signals or actions which trigger the shutdown of the Wrapper
            and its JVM will cause these properties to be ignored as the Wrapper
            is shutting down.  This means configuring the Wrapper to restart on
            any exit code will not prevent the Wrapper from shutting down.
        </para>
    </section>
</chapter>
