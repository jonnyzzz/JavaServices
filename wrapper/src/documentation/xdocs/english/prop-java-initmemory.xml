<?xml version="1.0"?>

<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" "../dtd/docbook/4.1.2/docbookx.dtd">

<!-- ********************************************************************
     $Id$
     ******************************************************************** -->

<chapter id="prop-java-initmemory">
    <title>wrapper.java.initmemory Property</title>
    <section>
        <title>Configuration Property Overview</title>
        <itemizedlist>
            <listitem>
                <ulink url="properties.html">Configuration Property Overview</ulink>
            </listitem>
            <listitem>
                <ulink url="props-jvm.html">JVM Configuration Properties</ulink>
            </listitem>
            <listitem>
                <ulink url="properties.html#name">Property List by Name</ulink>
            </listitem>
        </itemizedlist>
    </section>
    <section>
        <title>wrapper.java.initmemory</title>
        <para>
            The initial amount of memory in megabytes that the JVM should allocate
            at startup.  Defaults to 0, which will cause the JVM's default
            value to be used.
        </para>
        <para>
            If a non-zero value is specified for this property then an appropriate
            <literal moreinfo="none">-Xms</literal> parameter will be added to the
            Java command generated by the Wrapper.  If specified, the initial memory
            must be less than or equal to the value set for the
            <ulink url="prop-java-maxmemory.html">wrapper.java.maxmemory</ulink>
            property.
        </para>
        <para>
            If this property is set to 0 then it is also possible to specify
            the <literal moreinfo="none">-Xms</literal> parameter manually using the
            <ulink url="prop-java-additional-n.html">wrapper.java.additional.&lt;n&gt;</ulink>
            property.
        </para>
        <para>
            This value can affect the startup time of the application.  Startup time
            is optimized when this value is fairly close to the actual amount of
            memory required by the application once it has been started.  The
            default value for Windows and Linux JVMs is usally 2Mb, but Solaris JVMs
            require a minimum of 3Mb. Valid values are in the range 1 to
            4096Mb.
        </para>
        <informalexample>
            <simpara><emphasis>Example:</emphasis></simpara>
            <screen format="linespecific"><![CDATA[wrapper.java.initmemory=3]]></screen>
        </informalexample>
        <note>
            <simpara>
                Unless you really do know everything there is to know about memory
                and Garbage Collection in Java, I would recommend reading through
                the following document.  It describes in detail how the initial and
                maximum memory values affect Java performance and also goes into
                detail about what can be done to improve that performance for a
                given application.
            </simpara>
            <itemizedlist>
                <listitem>
                    <ulink url="http://java.sun.com/docs/hotspot/gc1.4.2/index.html">Tuning Garbage Collection with the 1.4.2 Java Virtual Machine.</ulink>
                </listitem>
                <listitem>
                    <ulink url="http://java.sun.com/docs/hotspot/gc/index.html">Tuning Garbage Collection with the 1.3.1 Java Virtual Machine.</ulink>
                </listitem>
            </itemizedlist>
        </note>
    </section>
</chapter>
