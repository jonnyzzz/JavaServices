<?xml version="1.0"?>

<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" "../dtd/docbook/4.1.2/docbookx.dtd">

<!-- ********************************************************************
     $Id$
     ******************************************************************** -->

<chapter id="prop-port">
    <title>wrapper.port Property</title>
    <section>
        <title>Configuration Property Overview</title>
        <itemizedlist>
            <listitem>
                <ulink url="properties.html">Configuration Property Overview</ulink>
            </listitem>
            <listitem>
                <ulink url="props-advanced.html">Advanced Properties</ulink>
            </listitem>
            <listitem>
                <ulink url="properties.html#name">Property List by Name</ulink>
            </listitem>
        </itemizedlist>
    </section>
    <section>
        <title>wrapper.port</title>
        <para>
            The Wrapper uses a socket to communicate with its Java component running
            inside a JVM.  This property allows the configuration of this port.  Most
            applications need not specify this property as the default value of 0,
            which instructs the Wrapper to choose its own port, will be sufficient.
        </para>
        <para>
            When a port of 0 is specified, the Wrapper will search for the first
            available port starting with port number 32000.  If a valid port can
            not be found within the first 1000 attempts then the Wrapper will fail
            with an error.  To my knowledge, this has never been seen.  This means
            that auto allocated ports will fall in the range 32000-32999.
        </para>
        <para>
            If a specific port should be used, then any port in the range 1-65535 may
            be specified.  Note that on UNIX systems port numbers below 1024 will most
            likely require root access to be set.  If the specified port is in use then
            the Wrapper will display a warning to the log and, as with the default
            case, will search for the first available port.
        </para>
        <para>
            When the Wrapper launches a JVM instance, it will open a server
            socket listening on this port bound to the localhost address.  The
            launched JVM will be supplied with a key which it must use to be
            able to connect back to the Wrapper process.  Once the JVM has
            connected, the Wrapper will no longer accept additional connections.
            The way this is done should not raise any security issues.
        </para>
        <informalexample>
            <simpara><emphasis>Example:</emphasis></simpara>
            <screen format="linespecific"><![CDATA[wrapper.port=1777]]></screen>
        </informalexample>
        <section>
            <title>Controlling the port range.</title>
            <para>
                In some cases, it is necessary to control the range of ports that
                the Wrapper will use when choosing a port.  The defaults were chosen
                to make it very unlikely that they would conflict with any well known
                ports.  If the default 32000-32999 range is causing problems, it can
                be changed using the <literal moreinfo="none">wrapper.port.min</literal>
                and <literal moreinfo="none">wrapper.port.max</literal> properties.
                If these are used, be sure to provide a large enough range to make it
                unlikely that all of the ports will be in use when the Wrapper attempts
                to start.
            </para>
            <informalexample>
                <simpara><emphasis>Example:</emphasis></simpara>
                <screen format="linespecific"><![CDATA[wrapper.port.min=32000
wrapper.port.max=32999]]></screen>
            </informalexample>
        </section>
    </section>
</chapter>
