<?xml version="1.0"?>

<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" "../dtd/docbook/4.1.2/docbookx.dtd">

<!-- ********************************************************************
     $Id$
     ******************************************************************** -->

<chapter id="prop-max-failed-invocations">
    <title>wrapper.max_failed_invocations Property</title>
    <section>
        <title>Configuration Property Overview</title>
        <itemizedlist>
            <listitem>
                <ulink url="properties.html">Configuration Property Overview</ulink>
            </listitem>
            <listitem>
                <ulink url="props-advanced.html">Advanced Properties</ulink>
            </listitem>
            <listitem>
                <ulink url="properties.html#name">Property List by Name</ulink>
            </listitem>
        </itemizedlist>
    </section>
    <section>
        <title>wrapper.max_failed_invocations</title>
        <para>
            Maximum number of times that the Wrapper will attempt to restart
            the JVM if each attempted invocation exits abnormally or is
            restarted shortly after having being launched.  Must be at least 1.
            Defaults to 5 invocations.
        </para>
        <para>
            If there are mistakes in the configuration of an application then
            the JVM could, for example, exit with a
            <literal moreinfo="none">ClassNotFoundException</literal>.  This
            will be interpreted as the JVM having exited abnormally, leading
            to a JVM restart.  Obviously, this would lead to an infinite loop
            of JVM restarts.  To resolve this problem, this property sets the
            maximum number of times that the JVM will be restarted.
        </para>
        <para>
            If the JVM was running for a period longer than the value set in the
            <ulink url="prop-successful-invocation-time.html">wrapper.successful_invocation_time</ulink>
            property, then the restart count will be reset to 0.  So this count
            only applies to JVM invocations which fail on startup.
        </para>
        <para>
            In general, this property should be set to a time longer than the
            period set with the
            <ulink url="prop-startup-timeout.html">wrapper.startup.timeout</ulink>
            property as it is designed to count failures on startup or shortly
            there after.
        </para>
        <para>
            In most cases, a value of 1 would be acceptable.  But there are
            cases where some resources may not immediately be available.  For
            example.  On Solaris systems.  A server socket may remain bound for
            up to 2 minutes after the process which previously had it bound was
            terminated.  This can lead to cases where a server will start
            normally.  Then at some later date, when the JVM is restarted for
            some other reason, getting a
            <literal moreinfo="none">BindException</literal> when the new JVM
            invocation tries to startup.  Setting the value to 5 makes it less
            likely that the JVM will not be able to restart successfully after
            a few failures.
        </para>
        <para>
            Restart requests from the JVM, using the
            <literal moreinfo="none">WrapperManager.restart()</literal> method,
            and restarts which are triggered by a filter are treated like any
            other restart.  If the request takes place soon after the JVM is
            launched the restart count will be incremented.
        </para>
        <informalexample>
            <simpara><emphasis>Example:</emphasis></simpara>
            <screen format="linespecific"><![CDATA[wrapper.max_failed_invocations=5]]></screen>
        </informalexample>
    </section>
</chapter>
